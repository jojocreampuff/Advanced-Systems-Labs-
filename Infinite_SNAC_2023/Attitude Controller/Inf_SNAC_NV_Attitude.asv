clc
clear
close all

dt = 0.001;
a = 1e6;
b = 1e6;
c = 1e5;
d = 1e5;
e = 1e5;
f = 0.5e4;

S = dt*diag([a,a,a,a,a,a]);
Q = dt*diag([b,b,c,d,d,e]);
R = dt*diag([f,f,f]);

N_patterns = 100;
N_states = 6;
N_neurons = length(Basis_Func_84(ones(N_states,1)));
max_training_loop = 40000;
t_f = 100;
threshold = 1e-5;
grav = 9.81;
Ix = 0.3;   % moment of inertia (kg*m^2)
Iy = 0.4;   % moment of inertia (kg*m^2)
Iz = 0.5;   % moment of inertia (kg*m^2)

f = @(x) [(x(4) + x(5)*(sin(x(1))*tan(x(2))) + x(6)*(cos(x(1))*tan(x(2))));
          (x(5)*cos(x(1)) - x(6)*sin(x(1)));
          (x(5)*sin(x(1))/cos(x(2)) + x(6)*cos(x(1))/cos(x(2)));
          ((Iy - Iz) / Ix * x(5) * x(6));
          ((Iz - Ix) / Iy * x(4) * x(6));
          ((Ix - Iy) / Iz * x(4) * x(5))];
g = [0 0 0; 0 0 0; 0 0 0; 1/Ix 0 0; 0 1/Iy 0; 0 0 1/Iz];

F = @(x) [x(1); x(2); x(3); x(4); x(5); x(6)] + dt * f(x);
G = @(x) g * dt;

A = @(x)...
    [
    dt*(x(5)*cos(x(1))*tan(x(2)) - x(6)*sin(x(1))*tan(x(2))) + 1, dt*(x(6)*cos(x(1))*(tan(x(2))^2 + 1) + x(5)*sin(x(1))*(tan(x(2))^2 + 1)), 0, dt,  dt*sin(x(1))*tan(x(2)),  dt*cos(x(1))*tan(x(2)); 
    -dt*(x(6)*cos(x(1)) + x(5)*sin(x(1))), 1, 0,  0,  dt*cos(x(1)),  -dt*sin(x(1)); 
    dt*((x(5)*cos(x(1)))/cos(x(2)) - (x(6)*sin(x(1)))/cos(x(2))), dt*((x(6)*cos(x(1))*sin(x(2)))/cos(x(2))^2 + (x(5)*sin(x(1))*sin(x(2)))/cos(x(2))^2), 1,  0,  (dt*sin(x(1)))/cos(x(2)),  (dt*cos(x(1)))/cos(x(2)); 
    0, 0, 0,  1,  (dt*x(6)*(Iy - Iz))/Ix,  (dt*x(5)*(Iy - Iz))/Ix; 
    0, 0, 0,  -(dt*x(6)*(Ix - Iz))/Iy,  1,  -(dt*x(4)*(Ix - Iz))/Iy; 
    0, 0, 0,  (dt*x(5)*(Ix - Iy))/Iz,  (dt*x(4)*(Ix - Iy))/Iz,  1; 
    ]; % row representation

N = t_f/dt;   
W = rand(N_neurons, N_states);

PHI_max = 1; PHI_min = -1;
THE_max = 1; THE_min = -1;
PSI_max = 1; PSI_min = -1;

p_max =  1; p_min =  -1;
q_max =  1; q_min =  -1;
r_max =  1; r_min =  -1;

tic
for i = 1:max_training_loop
    basis_func = zeros(N_neurons, N_patterns); 
    lambda_k_plus_1_target = zeros(N_states, N_patterns); 
    for j = 1 : N_patterns
        X1 = PHI_min + (PHI_max - PHI_min) * rand;%(1, N_patterns);
        X2 = THE_min + (THE_max - THE_min) * rand;%(1, N_patterns);
        X3 = PSI_min + (PSI_max - PSI_min) * rand;%(1, N_patterns);    
        X4 = p_min + (p_max - p_min) * rand;%(1, N_patterns);
        X5 = q_min + (q_max - q_min) * rand;%(1, N_patterns);
        X6 = r_min + (r_max - r_min) * rand;%(1, N_patterns); 
        x_k = [X1; X2; X3; X4; X5; X6];
        basis_func(:,j) = Basis_Func_84(x_k);
        lambda_k_plus_1 = W' * Basis_Func_84(x_k);
        u_k = -R^-1 * G(x_k).' * lambda_k_plus_1;
        x_k_plus_1 = F(x_k) + G(x_k) * u_k;
        lambda_k_plus_2 = W' * Basis_Func_84(x_k_plus_1);
        A_k_plus_1 = A(x_k_plus_1);
        lambda_k_plus_1_target(:,j) = Q * (x_k_plus_1) ...
            + A_k_plus_1.' * lambda_k_plus_2;
    end
    W = (basis_func * basis_func')\(basis_func * lambda_k_plus_1_target');
    if isnan(W)
        fprintf('Divergence in trainig \n')
        break
    end
    error(:, :) = W' * basis_func - lambda_k_plus_1_target;
    if mae(error(:,:))< threshold
        break
    end
end
Training_time = toc;
x1 = [rand(3,1);0;0;0];
x2 = [rand(3,1);0;0;0];
x3 = [rand(3,1);0;0;0];
x4 = [rand(3,1);0;0;0]; 
x5 = [rand(3,1);0;0;0];
x6 = [rand(3,1);0;0;0]; 
x7 = [rand(3,1);0;0;0]; 
x8 = [rand(3,1);0;0;0];
x9 = [rand(3,1);0;0;0]; 

r = [0;0;0;0;0;0];

for i = 1:N
    time(i) = (i-1)*dt;
    r(:, i) = F_r(time(i));*0
    u1(:,i) = -R^-1 * G(x1(:,i)-r(:, i))' * W(:,:)' * Basis_Func_84(x1(:,i)-r(:, i));
    u2(:,i) = -R^-1 * G(x2(:,i)-r(:, i))' * W(:,:)' * Basis_Func_84(x2(:,i)-r(:, i));
    u3(:,i) = -R^-1 * G(x3(:,i)-r(:, i))' * W(:,:)' * Basis_Func_84(x3(:,i)-r(:, i));
    u4(:,i) = -R^-1 * G(x4(:,i)-r(:, i))' * W(:,:)' * Basis_Func_84(x4(:,i)-r(:, i));
    u5(:,i) = -R^-1 * G(x5(:,i)-r(:, i))' * W(:,:)' * Basis_Func_84(x5(:,i)-r(:, i));
    u6(:,i) = -R^-1 * G(x6(:,i)-r(:, i))' * W(:,:)' * Basis_Func_84(x6(:,i)-r(:, i));
    u7(:,i) = -R^-1 * G(x7(:,i)-r(:, i))' * W(:,:)' * Basis_Func_84(x7(:,i)-r(:, i));
    u8(:,i) = -R^-1 * G(x8(:,i)-r(:, i))' * W(:,:)' * Basis_Func_84(x8(:,i)-r(:, i));
    u9(:,i) = -R^-1 * G(x9(:,i)-r(:, i))' * W(:,:)' * Basis_Func_84(x9(:,i)-r(:, i));
    x1(:, i+1) = F(x1(:,i)) + G(x1(:,i)) * u1(:,i);
    x2(:, i+1) = F(x2(:,i)) + G(x2(:,i)) * u2(:,i);
    x3(:, i+1) = F(x3(:,i)) + G(x3(:,i)) * u3(:,i);
    x4(:, i+1) = F(x4(:,i)) + G(x4(:,i)) * u4(:,i);
    x5(:, i+1) = F(x5(:,i)) + G(x5(:,i)) * u5(:,i);
    x6(:, i+1) = F(x6(:,i)) + G(x6(:,i)) * u6(:,i);
    x7(:, i+1) = F(x7(:,i)) + G(x7(:,i)) * u7(:,i);
    x8(:, i+1) = F(x8(:,i)) + G(x8(:,i)) * u8(:,i);
    x9(:, i+1) = F(x9(:,i)) + G(x9(:,i)) * u9(:,i);
end
figure
    
subplot(3,1,1); plot(...
    time, r(1, 1:length(time)), 'r--',...
    time, x1(1, 1:length(time)),...
    time, x2(1, 1:length(time)),...
    time, x3(1, 1:length(time)),...
    time, x4(1, 1:length(time)),...
    time, x5(1, 1:length(time)),...
    time, x6(1, 1:length(time)),...
    time, x7(1, 1:length(time)),...
    time, x8(1, 1:length(time)),...
    time, x9(1, 1:length(time)))
xlabel('Time (sec)' )
ylabel('x')
subplot(3,1,2); plot( ...
    time, r(2, 1:length(time)), 'r--',...
    time, x1(2, 1:length(time)), ...
    time, x2(2, 1:length(time)), ...
    time, x3(2, 1:length(time)), ...
    time, x4(2, 1:length(time)), ...
    time, x5(2, 1:length(time)),...
    time, x6(2, 1:length(time)),...
    time, x7(2, 1:length(time)),...
    time, x8(2, 1:length(time)),...
    time, x9(2, 1:length(time)))
xlabel('Time (sec)' )
ylabel('y')
subplot(3,1,3); plot( ...
    time, r(3, 1:length(time)), 'r--',...
    time, x1(3, 1:length(time)), ...
    time, x2(3, 1:length(time)), ...
    time, x3(3, 1:length(time)), ...
    time, x4(3, 1:length(time)), ...
    time, x5(3, 1:length(time)),...
    time, x6(3, 1:length(time)),...
    time, x7(3, 1:length(time)),...
    time, x8(3, 1:length(time)),...
    time, x9(3, 1:length(time)))
xlabel('Time (sec)' )
ylabel('y')

figure
subplot(3,1,1); plot(...
    time, r(4, 1:length(time)), 'r--',...
    time, x1(4, 1:length(time)),...
    time, x2(4, 1:length(time)),...
    time, x3(4, 1:length(time)),...
    time, x4(4, 1:length(time)),...
    time, x5(4, 1:length(time)),...
    time, x6(4, 1:length(time)),...
    time, x7(4, 1:length(time)),...
    time, x8(4, 1:length(time)),...
    time, x9(4, 1:length(time)))
xlabel('Time (sec)' )
ylabel('x')
subplot(3,1,2); plot( ...
    time, r(5, 1:length(time)), 'r--',...
    time, x1(5, 1:length(time)), ...
    time, x2(5, 1:length(time)), ...
    time, x3(5, 1:length(time)), ...
    time, x4(5, 1:length(time)), ...
    time, x5(5, 1:length(time)),...
    time, x6(5, 1:length(time)),...
    time, x7(5, 1:length(time)),...
    time, x8(5, 1:length(time)),...
    time, x9(5, 1:length(time)))
xlabel('Time (sec)' )
ylabel('y')
subplot(3,1,3); plot( ...
    time, r(6, 1:length(time)), 'r--',...
    time, x1(6, 1:length(time)), ...
    time, x2(6, 1:length(time)), ...
    time, x3(6, 1:length(time)), ...
    time, x4(6, 1:length(time)), ...
    time, x5(6, 1:length(time)),...
    time, x6(6, 1:length(time)),...
    time, x7(6, 1:length(time)),...
    time, x8(6, 1:length(time)),...
    time, x9(6, 1:length(time)))
xlabel('Time (sec)' )
ylabel('y')

figure
subplot(3,1,1); plot(...
    time, u1(1,1:length(time)),...
    time, u2(1,1:length(time)),...
    time, u3(1,1:length(time)),...
    time, u4(1,1:length(time)),...
    time, u5(1,1:length(time)),...
    time, u6(1,1:length(time)),...
    time, u7(1,1:length(time)),...
    time, u8(1,1:length(time)),...
    time, u9(1,1:length(time)))
xlabel('Time (sec)' )
ylabel('u1')
subplot(3,1,2); plot(...
    time, u1(2,1:length(time)),...
    time, u2(2,1:length(time)),...
    time, u3(2,1:length(time)),...
    time, u4(2,1:length(time)),...
    time, u5(2,1:length(time)),...
    time, u6(2,1:length(time)),...
    time, u7(2,1:length(time)),...
    time, u8(2,1:length(time)),...
    time, u9(2,1:length(time)))
xlabel('Time (sec)' )
ylabel('u2')
subplot(3,1,3); plot(...
    time, u1(3,1:length(time)),...
    time, u2(3,1:length(time)),...
    time, u3(3,1:length(time)),...
    time, u4(3,1:length(time)),...
    time, u5(3,1:length(time)),...
    time, u6(3,1:length(time)),...
    time, u7(3,1:length(time)),...
    time, u8(3,1:length(time)),...
    time, u9(3,1:length(time)))
xlabel('Time (sec)' )
ylabel('u3')

figure
grid on
hold on
plot3(r(1,:), r(2,:), -r(3,:), '--', 'Linewidth', 1.5)
plot3(x1(1,:), x1(2,:), -x1(3,:), 'Linewidth', 1.5)
plot3(x2(1,:), x2(2,:), -x2(3,:), 'Linewidth', 1.5)
plot3(x3(1,:), x3(2,:), -x3(3,:), 'Linewidth', 1.5)
plot3(x4(1,:), x4(2,:), -x4(3,:), 'Linewidth', 1.5)
plot3(x5(1,:), x5(2,:), -x5(3,:), 'Linewidth', 1.5)
plot3(x6(1,:), x6(2,:), -x6(3,:), 'Linewidth', 1.5)
plot3(x7(1,:), x7(2,:), -x7(3,:), 'Linewidth', 1.5)
plot3(x8(1,:), x8(2,:), -x8(3,:), 'Linewidth', 1.5)
plot3(x9(1,:), x9(2,:), -x9(3,:), 'Linewidth', 1.5)
title('3D Trajectory')
xlabel('x (m)'), ylabel('y (m)'), zlabel('z (m)')
legend(["Reference trajectory", "SNAC"]);
fprintf('required time for training = %g sec\n', Training_time)






